# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import inspect as module_0
import ast_util as module_1
import tokenize as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    var_0 = module_0.trace()
    clean_copier_0 = module_1.CleanCopier(var_0)
    var_1 = clean_copier_0.copy(var_0)
    var_2 = var_0.__str__()
    symbol_renamer_0 = module_1.SymbolRenamer(var_0)
    assert (
        f"{type(symbol_renamer_0).__module__}.{type(symbol_renamer_0).__qualname__}"
        == "ast_util.SymbolRenamer"
    )
    assert symbol_renamer_0.name_map == []
    var_3 = var_0.__repr__()
    var_0.title()


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    var_0 = module_1.copy_clean(bool_0)
    assert var_0 is True
    module_0.classify_class_attrs(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    clean_copier_0 = module_1.CleanCopier(none_type_0)
    clean_copier_1 = module_1.CleanCopier(none_type_0)
    module_1.rename_symbols(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_2.maybe()
    module_1.keywords_to_dict(var_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_1.matches(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_1.apply_to_single_assignments(none_type_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    symbol_renamer_0 = module_1.SymbolRenamer(none_type_0)
    assert (
        f"{type(symbol_renamer_0).__module__}.{type(symbol_renamer_0).__qualname__}"
        == "ast_util.SymbolRenamer"
    )
    assert symbol_renamer_0.name_map is None
    symbol_renamer_0.visit_Global(none_type_0)
